name: PR Handler Workflow with ChatGPT
on:
  pull_request:
    types: [opened] # Trigger only when PR is created

jobs:
  handle-pr:
    runs-on: ubuntu-latest
    steps:
    - name: Checkout PR Code
      uses: actions/checkout@v4
      with:
        fetch-depth: 0 # Fetch full history for better diff

    - name: Save PR Changes to File
      run: |
        git fetch origin ${{ github.event.pull_request.base.ref }}
        git diff origin/${{ github.event.pull_request.base.ref }}...HEAD > changes.txt
        
    - name: Print Changes File
      run: cat changes.txt

    - name: Generate PR Title and Description with ChatGPT
      id: chatgpt
      run: |
        # Read the changes file
        CHANGES=$(cat changes.txt)
        
        # Prepare the prompt for ChatGPT
        PROMPT="Based on the following code changes, generate a concise PR title (max 72 characters) and a detailed description. The title should summarize the main change, and the description should explain what was changed and why. Format your response as JSON with 'title' and 'description' fields.

        Code changes:
        $CHANGES"
        
        # Call ChatGPT API
        RESPONSE=$(curl "https://generativelanguage.googleapis.com/v1beta/models/gemini-2.0-flash:generateContent" \
          -H 'Content-Type: application/json' \
          -H 'X-goog-api-key: ${{ secrets.GEMINI_API_KEY }}' \
          -X POST \
          -d '{
             "contents": [
                          {
                           "parts": [
                                     {
                                      "text": "Explain how AI works in a few words"
                                     }
                                    ]
                         }
                       ]
               }')
        
        echo "ChatGPT Response: $RESPONSE"
        
        # Extract title and description from response
        TITLE=$(echo "$RESPONSE" | jq -r '.choices[0].message.content' | jq -r '.title // empty')
        DESCRIPTION=$(echo "$RESPONSE" | jq -r '.choices[0].message.content' | jq -r '.description // empty')
        
        # Fallback if ChatGPT response is empty or invalid
        if [ -z "$TITLE" ] || [ "$TITLE" = "null" ]; then
          TITLE="Auto-generated: Code changes detected"
        fi
        
        if [ -z "$DESCRIPTION" ] || [ "$DESCRIPTION" = "null" ]; then
          DESCRIPTION="### ðŸ”„ PR Updated by Workflow
          
          This pull request was automatically updated based on code changes detected.
          
          **Changes detected:**
          - Code modifications found in the repository
          - Please review the changes in the Files Changed tab"
        fi
        
        # Set outputs for next step
        echo "title=$TITLE" >> $GITHUB_OUTPUT
        echo "description<<EOF" >> $GITHUB_OUTPUT
        echo "$DESCRIPTION" >> $GITHUB_OUTPUT
        echo "EOF" >> $GITHUB_OUTPUT
      env:
        OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}

    - name: Update PR Title and Description
      env:
        GH_TOKEN: ${{ secrets.PAT_TOKEN }}
        PR_NUMBER: ${{ github.event.pull_request.number }}
      run: |
        # Use the ChatGPT generated title and description
        NEW_TITLE="${{ steps.chatgpt.outputs.title }}"
        NEW_BODY="${{ steps.chatgpt.outputs.description }}"
        
        echo "Updating PR with:"
        echo "Title: $NEW_TITLE"
        echo "Description: $NEW_BODY"
        
        gh pr edit "$PR_NUMBER" --title "$NEW_TITLE" --body "$NEW_BODY"
